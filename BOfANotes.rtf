{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;\red0\green0\blue0;\red63\green110\blue116;
\red92\green38\blue153;\red170\green13\blue145;\red46\green13\blue110;\red38\green71\blue75;\red196\green26\blue22;
\red28\green0\blue207;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c45600\c0;\csgenericrgb\c0\c0\c0;\csgenericrgb\c24700\c43100\c45600;
\csgenericrgb\c35900\c14900\c60100;\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c18100\c5200\c43100;\csgenericrgb\c14900\c27800\c29400;\csgenericrgb\c77000\c10200\c8600;
\csgenericrgb\c11000\c0\c81000;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs36 \cf0 \expnd0\expndtw0\kerning0
\
\
1. \
Create CalendarDates Data file. \
	Set its properties data and weak day, init method setting them. \
\
In ScheduleVC, in viewDidLoad, ask for a current time stamp. Calculate number of days to the end of the month. \
In ScheduleVC, in viewDidLoad, create array of available dates with a 'for' loop. \
\
2. \
Time. \
If todays calDay is chosen, update time collection and show time only available from that point of time. \
\
call for createTimeArr( false ) in viewDidLoad. Then, in 'didSelectItemAt' run check if user have chosen first cell. If yes, call 'createTimeArr( true )'.\
\
3. \
After pressing the "reserve" button a new reservation should be created with: date, time, and party size. \
(duration, title, description - all the same.)\
\
It should be added to [Reservations] array. Then, the segueWithIdentifier is triggered and we will pass that [Reservations] array. \
\
\
4. 
\f1\fs30 \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 Bug: when tapping 1st cell, another, 11 days ahead cell is tapped. Tapping that 11th cell - diselects the first cell. 12 - 24 (12d) 11 - 22(11d) 22-10 21 -10 22-10\
\pard\tx741\pardeftab741\pardirnatural\partightenfactor0
\cf3     \cf2 // 14-26 26-15 15-27....
\f0\fs36 \cf0 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
Has to do with 'dequeueCell' method. When new cells are loaded, we dequeing the same cell that was selected by me. \
Need to add a dictionary and check. If it was already selected = create a new cell. \
\
Bug: \
When we've tapped cell -> in dictionary value = true. When we tapped it again -> we set the value in dictionary = false, but. Solved.\
\
Bug: \
If we chose calendar date, and time, then we press calendar to deselect it - time starts jumping around. \
Should be - when we deselect calendar date - time is getting reset as well. \
Now, in cellButtonTapped( ) we call timeCollection.reloadData( ). And in cellForItemAt, in timeSpansCollection, we do 
\f1\fs30 \cf3 \kerning1\expnd0\expndtw0 \CocoaLigature0 cell.\cf4 checkImg\cf3 .\cf5 isHidden\cf3  = \cf6 true. 
\f0\fs36 \cf0 \expnd0\expndtw0\kerning0
\CocoaLigature1 We also need to set the flag "timeChosen" to false.  \
Still some bugs, but works. \
\
5. \
How to grab chosen cells date and time, save it into Reservations array. So then in ViewController I could retrieve that info and display it in the tableView. \
When in cellButtonTapped and in timeCellTapped we enable the 'reserve' button, we can save chosen data. And when user presses 'reserve' button, write it into 'reservations' array. \
But it would be smth like "Tue 12 1:00PM" (we can grab name of the month -> "September 12 1:00PM")\
Solved. \
\
6. \
Same problem with the enabling of the 'Reserve' button. \
\
Should be :\
	flag calendarCellTapped = false \
	timeCollection.isUserInteractionEnabled = false \
\
- tap CalendarCell:\
	calendarCellTapped = true\
	if cell.indexPath.row == 0 \{\
		reload timeCollection to start from now\
	\}\
	timeCollection.isUserInteractionEnabled = true\
\
- tap TimeCell:\
	enable the 'reserve' btn\
	(should be able to untap or tap another TimeCell)\
\
- tap CalendarCell again \
	reloads timeCollection (to remove the check mark)\
	timeCollection.isUserInteractionEnabled = false\
	hides the 'reserve' button\
\
Solved. \
\
______\
Saving across states. \
To preserve data, in viewDidLoad( ) call\
\pard\tx741\pardeftab741\pardirnatural\partightenfactor0

\f1\fs30 \cf3 \kerning1\expnd0\expndtw0 \CocoaLigature0  \
        \cf5 NotificationCenter\cf3 .\cf5 default\cf3 .\cf7 addObserver\cf3 (\cf6 self\cf3 , selector: \cf6 #selector\cf3 (\cf8 closeApp\cf3 ), name: \cf5 NSNotification\cf3 .\cf5 Name\cf3 .\cf5 UIApplicationDidEnterBackground\cf3 , object: \cf6 nil\cf3 )\
        \cf5 NotificationCenter\cf3 .\cf5 default\cf3 .\cf7 addObserver\cf3 (\cf6 self\cf3 , selector: \cf6 #selector\cf3 (\cf8 openApp\cf3 ), name: \cf5 NSNotification\cf3 .\cf5 Name\cf3 .\cf5 UIApplicationWillEnterForeground\cf3 , object: \cf6 nil\cf3 )\
        \
\

\f0\fs36 \cf0 \expnd0\expndtw0\kerning0
\CocoaLigature1 in same VC, implement: \

\f1\fs30 \cf3 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
  \cf6 func\cf3  closeApp() \{\
        \cf7 print\cf3 (\cf9 "Zhenya: closeApp() func was triggered"\cf3 )\
        \cf6 let\cf3  closingTime = \cf5 Date\cf3 ()\
        \cf6 let\cf3  defaults = \cf5 UserDefaults\cf3 .\cf5 standard\cf3 \
        defaults.\cf7 set\cf3 (closingTime, forKey: \cf9 "closing_time"\cf3 )\
    \}\
    \
    \cf6 func\cf3  openApp() \{\
        \cf6 let\cf3  openingTime = \cf5 Date\cf3 ()\
        \cf6 let\cf3  defaults = \cf5 UserDefaults\cf3 .\cf5 standard\cf3 \
        \cf6 let\cf3  closingTime = defaults.\cf7 object\cf3 (forKey: \cf9 "closing_time"\cf3 ) \cf6 as\cf3 ? \cf5 Date\cf3 \
        \cf6 if\cf3  closingTime != \cf6 nil\cf3  \{\
            \cf8 compareTimes\cf3 (openingTime, closingTime!)\
        \}\
    \}\
    \
    \cf6 func\cf3  compareTimes(\cf6 _\cf3  opening: \cf5 Date\cf3 ?, \cf6 _\cf3  closing: \cf5 Date\cf3 ?) \{\
  \
        \cf6 if\cf3  (opening!.\cf5 timeIntervalSinceReferenceDate\cf3  - closing!.\cf5 timeIntervalSinceReferenceDate\cf3 ) > \cf10 600\cf3  \{\
            \cf8 resetUI\cf3 ()\
        \}\
    \}\
\

\f0\fs36 \cf0 \expnd0\expndtw0\kerning0
\CocoaLigature1 if its more than 10 min, we simply reset the UI. Otherwise data will be there for ever. \
\
\
\
\
}